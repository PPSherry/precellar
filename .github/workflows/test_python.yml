name: test-python-package

on: [push, pull_request]

jobs:
  build-and-test:
    outputs:
      VERSION: ${{ steps.get-version.outputs.VERSION }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: nschloe/action-cached-lfs-checkout@v1
      
    - name: Set up GCC
      uses: egor-tensin/setup-gcc@v1
      with:
        version: 10
        platform: x64
      
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          g++ \
          libz-dev \
          libbz2-dev \
          liblzma-dev \
          libstdc++-10-dev \
          ninja-build

    - uses: actions/setup-python@v5
      name: Install Python
      with:
          python-version: '3.10'

    - uses: ./.github/actions/setup-rust
      with:
        cache: true

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip --break-system-packages
        python -m pip install --user pytest hypothesis==6.72.4 wheel maturin

    - name: Build wheel files
      env:
        CFLAGS: "-Wno-error"
        CXXFLAGS: "-Wno-error"
        RUSTFLAGS: "-C target-cpu=x86-64"
      run: |
        cd ${GITHUB_WORKSPACE}/python
        mkdir ${GITHUB_WORKSPACE}/wheel_files
        pip wheel . --wheel-dir ${GITHUB_WORKSPACE}/wheel_files


    - name: Test Python package
      run: |
        python -m pip install --user ${GITHUB_WORKSPACE}/wheel_files/*.whl

    - name: Get precellar version
      id: get-version
      run: |
        VERSION_NUMBER=$(python -c "import precellar;print(precellar.__version__)")
        echo "Version: $VERSION_NUMBER"
        echo "VERSION=$VERSION_NUMBER" >> $GITHUB_OUTPUT

    - name: Upload wheel files as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: wheel-files
        path: ./wheel_files/precellar*.whl

  build-wheel:
    needs: build-and-test
    if: ${{ startsWith(github.ref, 'refs/tags/') || contains(github.event.head_commit.message, '[wheel]') }}
    uses: regulatory-genomics/precellar/.github/workflows/wheels.yml@main

  publish:
    needs: build-wheel
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    if: ${{ startsWith(github.ref, 'refs/tags') }}
    steps:
    - name: Download wheel files
      uses: actions/download-artifact@v4
      with:
        path: dist
        pattern: precellar-*
        merge-multiple: true

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1